#!/bin/zsh
# Wikify by Mario "Kuroir" Ricalde
#
function wikify() {
  # Filter some files and directories.
  function continue_if_filtered() {
    if [[ "$@" =~ "images$" ]]; then
      continue
    elif [[ "$@" =~ "(_sidebar|_footer|_header)" ]]; then
      continue
    elif [[ "$@" == "." ]]; then
      continue
    fi
  }

  function directory_depth() {
    if [[ $initial_depth -ne 0 ]]; then
      new_depth=$(echo $@ | grep -o / | wc -l)
      # The minus 1, is for the parent subject directory, we don't count it.
      echo $(($new_depth -  $initial_depth - 1 ))
    else
      echo $@ | grep -o / | wc -l
    fi
  }

  # 4 Spaces per level, this is the markdown standard for lists.
  function calculate_spaces() {
    _spaces=""
    if [[ $@ -gt 0 ]]; then
      i=1
      while [[ $i -le $@ ]]; do
        _spaces="$_spaces    "
        (( i++ ))
      done
    fi
    echo $_spaces
  }

  function depth_and_space() {
    depth=$(directory_depth $@)
    space=$(calculate_spaces $depth)
  }

  function to_parent_subject() {
    echo "$@" | sed -e 's/\/[a-zA-Z0-9\.\-]*$//'
  }

  function subject_name() {
    echo "$@" | sed -e 's/.*\/\([a-zA-Z0-9\.\-]*\).md$/\1/'
  }

  function string_to_name_and_id() {
    if [[ "$(file -ib $1)" == "directory" ]]; then
      1="$1.md"
    fi
    identifier=$(echo "$1" | sed -e 's/.*\/\([a-zA-Z0-9\.\-]*\).md$/\1/')
    name=$(echo "$identifier" | sed -e 's/^[0-9\.]*\-//' | sed -e 's/\-/ /g')
  }

  function subject_to_list() {
    string_to_name_and_id $1
    if [[ ! -s $file ]]; then
      flag=" ⚑"
    fi
    echo "${space}0. [[$name|$identifier]]$flag"
  }

  function id_to_string() {
    echo "${@/-/ }"
  }

  function subject_to_header() {
    string_to_name_and_id $1
    echo "\n${space}### [[☰|$identifier]] $(id_to_string $identifier)"
  }

  function recursive_write() {
    if [[ "$reverse_pointer_depth" -eq "0" ]]; then
      pointer_file=$(to_parent_subject $@)
    else
      pointer_file=$@
    fi

    if [[ "$@" != "$project_directory" ]]; then
      if [[ "$reverse_pointer_depth" -ne "0" ]]; then
        space=$(calculate_spaces $(($reverse_pointer_depth - 1)))
        echo "$(subject_to_list $file)" >> "$pointer_file.md"
      fi
      (( reverse_pointer_depth++ ))
      recursive_write $(to_parent_subject $@)
      if [[ "$(to_parent_subject $@)" == "$project_directory" ]]; then
        echo "$(subject_to_list $file)" >> "$@/_sidebar.md"
      fi
    else
      space=$(calculate_spaces $(($reverse_pointer_depth - 2)))
      echo "$(subject_to_list $file)" >> "$project_directory/Home.md"
      reverse_pointer_depth=0
    fi
  }

  function parse_files_recursively() {
    depth_and_space $@
    echo "${space}Directory: $@"

    # Directory write
    if [[ "$depth" -eq "0" ]]; then
      echo "$(subject_to_header $@.md)"  >> "$project_directory/Home.md"
      echo "$(subject_to_header $@.md)\n---"  > "$@/_sidebar.md"
      echo "$@.md" >> /tmp/files_to_add_wikifier.txt
      echo "$@/_sidebar.md" >> /tmp/files_to_add_wikifier.txt
    fi

    for file in $(ls -l $@ | awk '{ print $9 }'); do;
      continue_if_filtered $file
      file="$@/$file"

      if [[ "$(file -ib $file)" == "directory" ]]; then
        echo "$file.md" >> /tmp/files_to_add_wikifier.txt
        recursive_write $file
        parse_files_recursively $file
      else
        depth_and_space $file
        echo "${space}File: $file"
        echo "$file" >> /tmp/files_to_add_wikifier.txt
        recursive_write $file 
      fi
    done
  }

  function remove_previous_generated_files(){
    touch /tmp/files_to_add_wikifier.txt

    home_file="$project_directory/Home.md"
    rm $home_file

    for previous_file in $(find . -type d ! \( -path './.*' -o -path '.' \)); do;
      rm "$previous_file.md"
    done
  }

  function set_initial_values(){
    project_directory=$PWD
    initial_depth=0
    initial_depth=$(directory_depth $project_directory)
    reverse_pointer_depth=0
  }

  function add_files_to_git(){
    echo "$project_directory/Home.md" >> /tmp/files_to_add_wikifier.txt

    while read line
    do
      [ -f $line ] && git add $line
    done < /tmp/files_to_add_wikifier.txt

    rm -f /tmp/files_to_add_wikifier.txt
  }

  set_initial_values
  remove_previous_generated_files

  directories_in_current_location=$(ls -l -d $PWD/* | egrep '^d' | awk '{ print $9}')

  for current_directory in $directories_in_current_location; do;
    continue_if_filtered $current_directory
    parse_files_recursively $current_directory
  done

  add_files_to_git

  echo "**Important**: The Tables of Content are generated. Any change will be overridden on the next update.<br>For more information: [GitHub Wikifier](https://github.com/hybridgroup/GitHub-Wikifier)" > "$project_directory/_footer.md"
  project_directory="$PWD." # hack to restore ps1
}

wikify .
